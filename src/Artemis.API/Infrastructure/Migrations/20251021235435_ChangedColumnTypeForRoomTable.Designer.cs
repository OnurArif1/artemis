// <auto-generated />
using System;
using Artemis.API.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Artemis.API.Infrastructure.Migrations
{
    [DbContext(typeof(ArtemisDbContext))]
    [Migration("20251021235435_ChangedColumnTypeForRoomTable")]
    partial class ChangedColumnTypeForRoomTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence("Category_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("CategoryHashtagMap_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("Comment_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("Hashtag_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("Mention_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("MentionPartyMap_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("Message_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("Organization_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("Party_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("Person_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("Room_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("RoomHashtagMap_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("Subscribe_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("Topic_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("TopicHashtagMap_hilo")
                .IncrementsBy(10);

            modelBuilder.Entity("Artemis.API.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "Category_hilo");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("Artemis.API.Entities.CategoryHashtagMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "CategoryHashtagMap_hilo");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<int>("HashtagId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategoryHashtagMap", (string)null);
                });

            modelBuilder.Entity("Artemis.API.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "Comment_hilo");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<int>("Downvote")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PartyId")
                        .HasColumnType("integer");

                    b.Property<int>("TopicId")
                        .HasColumnType("integer");

                    b.Property<int>("Upvote")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PartyId");

                    b.HasIndex("TopicId");

                    b.ToTable("Comment", (string)null);
                });

            modelBuilder.Entity("Artemis.API.Entities.Hashtag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "Hashtag_hilo");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<string>("HashtagName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Hashtag", (string)null);
                });

            modelBuilder.Entity("Artemis.API.Entities.Mention", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "Mention_hilo");

                    b.Property<int?>("CommentId")
                        .HasColumnType("integer");

                    b.Property<int?>("MessageId")
                        .HasColumnType("integer");

                    b.Property<int?>("RoomId")
                        .HasColumnType("integer");

                    b.Property<int?>("TopicId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CommentId");

                    b.HasIndex("MessageId");

                    b.HasIndex("RoomId");

                    b.HasIndex("TopicId");

                    b.ToTable("Mention", (string)null);
                });

            modelBuilder.Entity("Artemis.API.Entities.MentionPartyMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "MentionPartyMap_hilo");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<int>("MentionId")
                        .HasColumnType("integer");

                    b.Property<int>("PartyId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MentionId");

                    b.HasIndex("PartyId");

                    b.ToTable("MentionPartyMap", (string)null);
                });

            modelBuilder.Entity("Artemis.API.Entities.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "Message_hilo");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<int>("Downvote")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PartyId")
                        .HasColumnType("integer");

                    b.Property<int>("RoomId")
                        .HasColumnType("integer");

                    b.Property<int>("Upvote")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PartyId");

                    b.HasIndex("RoomId");

                    b.ToTable("Message", (string)null);
                });

            modelBuilder.Entity("Artemis.API.Entities.Party", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "Person_hilo");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<int>("DeviceId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsBanned")
                        .HasColumnType("boolean");

                    b.Property<string>("PartyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PartyType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Party", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Artemis.API.Entities.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "Room_hilo");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<double>("ChannelId")
                        .HasColumnType("double precision");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<int>("Downvote")
                        .HasColumnType("integer");

                    b.Property<double>("LifeCycle")
                        .HasColumnType("double precision");

                    b.Property<double>("LocationX")
                        .HasColumnType("double precision");

                    b.Property<double>("LocationY")
                        .HasColumnType("double precision");

                    b.Property<int>("PartyId")
                        .HasColumnType("integer");

                    b.Property<string>("ReferenceId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoomType")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("TopicId")
                        .HasColumnType("integer");

                    b.Property<int>("Upvote")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PartyId");

                    b.ToTable("Room", (string)null);
                });

            modelBuilder.Entity("Artemis.API.Entities.RoomHashtagMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "RoomHashtagMap_hilo");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<int>("HashtagId")
                        .HasColumnType("integer");

                    b.Property<int>("RoomId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HashtagId");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomHashtagMap", (string)null);
                });

            modelBuilder.Entity("Artemis.API.Entities.Subscribe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "Subscribe_hilo");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<int>("CreatedPartyId")
                        .HasColumnType("integer");

                    b.Property<int>("SubscriberPartyId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CreatedPartyId");

                    b.HasIndex("SubscriberPartyId");

                    b.ToTable("Subscribe", (string)null);
                });

            modelBuilder.Entity("Artemis.API.Entities.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "Topic_hilo");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<int>("Downvote")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("LocationX")
                        .HasColumnType("double precision");

                    b.Property<double>("LocationY")
                        .HasColumnType("double precision");

                    b.Property<int?>("MentionId")
                        .HasColumnType("integer");

                    b.Property<int>("PartyId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<int>("Upvote")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PartyId");

                    b.ToTable("Topic", (string)null);
                });

            modelBuilder.Entity("Artemis.API.Entities.TopicHashtagMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "TopicHashtagMap_hilo");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<int>("HashtagId")
                        .HasColumnType("integer");

                    b.Property<int>("TopicId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HashtagId");

                    b.ToTable("TopicHashtagMap", (string)null);
                });

            modelBuilder.Entity("Artemis.API.Entities.Organization", b =>
                {
                    b.HasBaseType("Artemis.API.Entities.Party");

                    b.ToTable("Organization", (string)null);
                });

            modelBuilder.Entity("Artemis.API.Entities.Person", b =>
                {
                    b.HasBaseType("Artemis.API.Entities.Party");

                    b.ToTable("Person", (string)null);
                });

            modelBuilder.Entity("Artemis.API.Entities.CategoryHashtagMap", b =>
                {
                    b.HasOne("Artemis.API.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Artemis.API.Entities.Comment", b =>
                {
                    b.HasOne("Artemis.API.Entities.Party", "Party")
                        .WithMany()
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artemis.API.Entities.Topic", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Party");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("Artemis.API.Entities.Mention", b =>
                {
                    b.HasOne("Artemis.API.Entities.Comment", "Comment")
                        .WithMany()
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Artemis.API.Entities.Message", "Message")
                        .WithMany()
                        .HasForeignKey("MessageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Artemis.API.Entities.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Artemis.API.Entities.Topic", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Comment");

                    b.Navigation("Message");

                    b.Navigation("Room");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("Artemis.API.Entities.MentionPartyMap", b =>
                {
                    b.HasOne("Artemis.API.Entities.Mention", "Mention")
                        .WithMany()
                        .HasForeignKey("MentionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artemis.API.Entities.Party", "Party")
                        .WithMany()
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mention");

                    b.Navigation("Party");
                });

            modelBuilder.Entity("Artemis.API.Entities.Message", b =>
                {
                    b.HasOne("Artemis.API.Entities.Party", "Party")
                        .WithMany()
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artemis.API.Entities.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Party");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Artemis.API.Entities.Room", b =>
                {
                    b.HasOne("Artemis.API.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("Artemis.API.Entities.Party", "Party")
                        .WithMany()
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Party");
                });

            modelBuilder.Entity("Artemis.API.Entities.RoomHashtagMap", b =>
                {
                    b.HasOne("Artemis.API.Entities.Hashtag", "Hashtag")
                        .WithMany()
                        .HasForeignKey("HashtagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artemis.API.Entities.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hashtag");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Artemis.API.Entities.Subscribe", b =>
                {
                    b.HasOne("Artemis.API.Entities.Party", "CreatedParty")
                        .WithMany()
                        .HasForeignKey("CreatedPartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artemis.API.Entities.Party", "SubscriberParty")
                        .WithMany()
                        .HasForeignKey("SubscriberPartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedParty");

                    b.Navigation("SubscriberParty");
                });

            modelBuilder.Entity("Artemis.API.Entities.Topic", b =>
                {
                    b.HasOne("Artemis.API.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artemis.API.Entities.Party", "Party")
                        .WithMany()
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Party");
                });

            modelBuilder.Entity("Artemis.API.Entities.TopicHashtagMap", b =>
                {
                    b.HasOne("Artemis.API.Entities.Hashtag", "Hashtag")
                        .WithMany()
                        .HasForeignKey("HashtagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hashtag");
                });

            modelBuilder.Entity("Artemis.API.Entities.Organization", b =>
                {
                    b.HasOne("Artemis.API.Entities.Party", null)
                        .WithOne()
                        .HasForeignKey("Artemis.API.Entities.Organization", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Artemis.API.Entities.Person", b =>
                {
                    b.HasOne("Artemis.API.Entities.Party", null)
                        .WithOne()
                        .HasForeignKey("Artemis.API.Entities.Person", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
